<?xml version="1.0"?>
<!--
 Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

 This code is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License version 2 only, as
 published by the Free Software Foundation.  Oracle designates this
 particular file as subject to the "Classpath" exception as provided
 by Oracle in the LICENSE file that accompanied this code.

 This code is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 version 2 for more details (a copy is included in the LICENSE file that
 accompanied this code).

 You should have received a copy of the GNU General Public License version
 2 along with this work; if not, write to the Free Software Foundation,
 Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

 Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 or visit www.oracle.com if you need additional information or have any
 questions.
-->

<project name="jaf_src-drop" default="all" basedir=".">

    <!-- Locations of master drop bundles. -->
    <property name="jaf_src.master.bundle.copy"
              value="${jaf_src.master.bundle.dir}/${jaf_src.bundle.name}"/>
    <property name="jaf_src.master.bundle.url"
              value="${jaf_src.master.bundle.url.base}/${jaf_src.bundle.name}"/>

    <!-- Location where the copied bundle lands. -->
    <property name="jaf_src.bundle.copy"
              value="${drop.expanded.dir}/bundles/${jaf_src.bundle.name}"/>

    <!-- Root of exploded area. -->
    <property name="jaf_src.root.dir" value="${drop.dir}/jaf_src"/>
    <property name="jaf_src.src.dir" value="${jaf_src.root.dir}/src"/>

    <!-- To see if the drop areas are ready. (ignoring bundles) -->
    <target name="-jaf_src-ready">
        <condition property="jaf_src.ready">
            <or>
                <available file="${drop.included.dir}" type="dir"/>
                <and>
                    <available file="${jaf_src.root.dir}" type="dir"/>
                    <available file="${jaf_src.root.dir}/PATCHED" type="file"/>
                </and>
            </or>
        </condition>
    </target>

    <!-- Copy over bundles from some shared master area. -->
    <condition property="jaf_src.master.bundle.copy.exists">
        <available file="${jaf_src.master.bundle.copy}" type="file"/>
    </condition>
    <target name="-jaf_src-copy-bundle"
	    depends="init, -jaf_src-ready"
            if="jaf_src.master.bundle.copy.exists"
            unless="jaf_src.ready">
        <echo message="Copying from ${jaf_src.master.bundle.copy}"/>
        <dirname property="jaf_src.bundle.dirname" file="${jaf_src.bundle.copy}"/>
        <mkdir dir="${jaf_src.bundle.dirname}"/>
        <delete file="${jaf_src.bundle.copy}.temp"/>
        <delete file="${jaf_src.bundle.copy}"/>
        <copy file="${jaf_src.master.bundle.copy}" tofile="${jaf_src.bundle.copy}.temp"/>
        <move file="${jaf_src.bundle.copy}.temp" tofile="${jaf_src.bundle.copy}"/>
        <property name="jaf_src.master.bundle.found" value="true"/>
    </target>

    <!-- Determine if the master url download should be used. -->
    <target name="-jaf_src-url-should-be-used" unless="jaf_src.url.should.be.used">
        <condition property="jaf_src.url.should.be.used">
            <and>
                <istrue value="${allow.downloads}"/>
                <not>
                    <isset property="jaf_src.master.bundle.copy.exists"/>
                </not>
            </and>
        </condition>
    </target>

    <!-- Download bundles from a url. -->
    <target name="-jaf_src-url-bundle"
	    depends="init, -jaf_src-ready, -jaf_src-url-should-be-used"
            if="jaf_src.url.should.be.used"
            unless="jaf_src.ready">
        <echo message="Downloading from ${jaf_src.master.bundle.url}"/>
        <dirname property="jaf_src.bundle.dirname" file="${jaf_src.bundle.copy}"/>
        <mkdir dir="${jaf_src.bundle.dirname}"/>
        <delete file="${jaf_src.bundle.copy}.temp"/>
        <delete file="${jaf_src.bundle.copy}"/>
        <get src="${jaf_src.master.bundle.url}" dest="${jaf_src.bundle.copy}.temp"/>
        <move file="${jaf_src.bundle.copy}.temp" tofile="${jaf_src.bundle.copy}"/>
        <property name="jaf_src.master.bundle.found" value="true"/>
    </target>
    
    <!-- Fill in the drop zones, but just when needed. -->
    <target name="jaf_src-update"
            depends="init, 
		     -jaf_src-copy-bundle,
		     -jaf_src-url-bundle,
                     -jaf_src-ready"
            if="jaf_src.master.bundle.found"
            unless="jaf_src.ready">
        <delete dir="${jaf_src.root.dir}"/>
        <delete dir="${jaf_src.root.dir}-temp"/>
        <mkdir dir="${jaf_src.root.dir}-temp"/>
	<checksum file="${jaf_src.bundle.copy}" 
		  property="jaf_src.bundle.md5.checksum.is"/>
        <condition property="jaf_src.bundle.md5.checksum.good">
            <equals arg1="${jaf_src.bundle.md5.checksum}"
                    arg2="${jaf_src.bundle.md5.checksum.is}"/>
        </condition>
        <fail unless="jaf_src.bundle.md5.checksum.good">
              Checksum on file ${jaf_src.bundle.copy} is 
              ${jaf_src.bundle.md5.checksum.is}, not ${jaf_src.bundle.md5.checksum}
        </fail>
        <unzip src="${jaf_src.bundle.copy}" dest="${jaf_src.root.dir}-temp"/>
        <move file="${jaf_src.root.dir}-temp" tofile="${jaf_src.root.dir}"/>
        <touch>
            <fileset dir="${jaf_src.root.dir}"/>
        </touch>
        <condition property="patch.utility" value="gpatch" else="patch">
            <os name="SunOS"/>
        </condition>
        <apply executable="${patch.utility}"
		   dir="${jaf_src.root.dir}"
	           parallel="false"
	           failonerror="true"
	           verbose="true">
            <arg value="-l"/>
            <arg value="-p0"/>
            <arg value="-i"/>
            <filelist dir="${patches.dir}/jaf_src" files="${jaf_src.patch.list}"/>
        </apply>
        <echo file="${jaf_src.root.dir}/PATCHED"
	      message="Patches have been applied."/>
    </target>

</project>
